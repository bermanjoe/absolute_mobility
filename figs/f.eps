%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.55.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.2.0.556344 \\(R2017a\\). Operating System: Windows 8)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 359 278
%%HiResBoundingBox: 0 0 359 278
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font UCGYDF+Helvetica
%!FontType1-1.0: UCGYDF+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /UCGYDF+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 520 709] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91CAEA8FCFBD092B731BA50E976C
F2D1A3FF361A646D1AB184595395D06D0878AE6DA2830430C83E8A6F61D9C1AB
323A763E8DCB87DED77B64ECD6E54D27713CBE688F97C3D0D572DE54533F350A
3DFCA7EDEBD95AC766ADE5153675C5188AAEAAC295EE1E07041BDE7CBD9D202D
08D1DD39A93430C7A9F246CCC1FDF25F7C323966571919597AA20ABCD39A7A76
55C9D99D5960064A2D4F89EEE48FBE9117E145CB802739DA86D68458F149FB86
F99258D55411FCB230EFA8858DBC8187A6C0AB9EB549ED3510D12B658C047E9D
C232E7B19CD490172DC44E3C256031466C244E1BBCF129D7BB97450E1B3727C2
0E06B1348AE64BF05D6CB189D1FBB5D8FECC4021EF8B1D011E2600150D1E70D0
C81FDB3274997AE550E1BC78C1638666E90C98B7A3507109ECC2C8931AC3EA76
6C9100E59F01ABACF2C3EF2DDC0A32C2EA8C98CC3E078E55CB975EC444B40176
61128AD9905F9A37ABDBEB8FE57A1B78F84B86FCBA6F68151E7A5F14FB62F377
98BEF13D3DD61C40862339E8A5EC5DF3FB120566FD2BED3C5E22699A43BFBD33
A7456DA673DD3A86004E1726DE3DB16B7843F6C90775C511480F00B0ED6B4CA4
5FCCF85BAC54546F8B4CA92188B906D02C440BC7C8E3528EAE188AEF0E64C42D
6C53389225DAAC3AC8947AFE1A32B66C0F7425581E4BB58C85B6748C69297E7F
CC796D9D499A02CD79AD8F5C0FDF063A93D0920404E54B2C00452D2A1D2CF634
D52497A9D26461BAFD500672CFEC9678D0B21203BEAB5393649490E021CAAA7C
AEFABCE8F3833EF486DEEB013B334CE5E92FA00331D006BF2B6E3DF26654F703
372EE2E1A273AC9031F50BD7A0A1E4409AAEF7B238092C534E36F457358A8095
937C6E236F8E84704B988EE9E59CD68FDD2A4DC3006CCCA419FE031742B7795E
4DACB18259A6DD5E8150C64128A6ACD49557E30F9E09894CDF7CB660FEDD262A
A197BE7B419D0EF5F1340AB92B2427B05CD0F9FF2BEE28D0D71C212E1CE7A5D8
FCB03266AE98BE01D65B15A392B2DAE4E39BD646C9E47D7F3475CB6D3DAA9422
2CBA2AF1F88157C7B09BAB71C23D61C2AB916DF66E6D71E3DE73A6B8B8B905E3
D9FDDDCDB4A839D9C2385C4E198FF4E21BE3BC04C2A0E8DD5378BE4DAA951B04
3C45D3B3DECF5464281918B43677BBEA5D6A30CEDF7D11875F878643F0BD9E5C
88101DC46A029B7E68FABF864B16B4CD93BCCF44EABA487399314E5536B24561
D326EBB54741FED7C70544D8578A8C742A6EFBC85DE454A51B9C8A1ADA32CD9E
9DCA8B37A95CF410E9629B6F8D06031EF782DCFE0D55780025473DBF3DB2B31C
EE6E2DB60D8D835091A6990310F6B6AF732EC3201557D12EB377BCDDBA6876AA
94DB0A511202838DE6CE457E0DF9CB266355575A8A0010A09CC9D4A406785CB1
E8E03BC88DF050488857E11C463E6B04E4191F40A4F3F317D8178B740292AEAA
E6BA6737DB8A28476618522E962635C26682A16E597F233D7929AB586F0B9FFD
DF5DDA2EE9E32D0A9E1B60D10DAD81820B2182AE2C2BB360C5F80EC76E154C95
192DCEB7AE158F5A1806D2A520C8DE58EEADCD5CB7148A6DD012D95A7F782112
3111F929A5EC90570396D179DA05C7439EF8B3B4A0D17CED86ECBAC7FE5CE3A1
AB85D2F79EE349925AF46FA5FD250593004A1CB8F2AC6EC8B1AC309DB1985FC8
3443F24E4054B9F96DCC8056A4B1198CEE7D35D6A5553F307C64D1FD5755CBCF
4D3D0EA8715BDA6D9418ED62AC1C6A657FF5F071DB941811F03D98C4D33DE3D6
602F23BB09D234D6B71C6688198EB6217EF1088ABF762140A442CCF076768512
9AE52BCA01389229478FA02432C6BB126BE105D248
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /UCGYDF+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 359 278 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[0.9394] sc
-305 -177.5 4200 3150 re
f
/DeviceGray {} cs
[0.9414] sc
-305 -177.5 4200 3150 re
f
/DeviceGray {} cs
[1] sc
242.5 167.5 3255 2572.5 re
f
5.0025 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
242.5 167.5 m
3497.5 167.5 l
S
242.5 2740 m
3497.5 2740 l
S
242.5 167.5 m
242.5 200.051 l
S
784.996 167.5 m
784.996 200.051 l
S
1327.5 167.5 m
1327.5 200.051 l
S
1870 167.5 m
1870 200.051 l
S
2412.5 167.5 m
2412.5 200.051 l
S
2955 167.5 m
2955 200.051 l
S
3497.5 167.5 m
3497.5 200.051 l
S
242.5 2740 m
242.5 2707.45 l
S
784.996 2740 m
784.996 2707.45 l
S
1327.5 2740 m
1327.5 2707.45 l
S
1870 2740 m
1870 2707.45 l
S
2412.5 2740 m
2412.5 2707.45 l
S
2955 2740 m
2955 2707.45 l
S
3497.5 2740 m
3497.5 2707.45 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 21.25 2.25] Tm
0 0 Td
/F8_0 9.99975 Tf
(0)
[5.559861
0] Tj
-4606.63 TJm
(20)
[5.559861
0
5.559861
0] Tj
-4313.14 TJm
(40)
[5.559861
0
5.559861
0] Tj
-4313.14 TJm
(60)
[5.559861
0
5.559861
0] Tj
-4313.14 TJm
(80)
[5.559861
0
5.559861
0] Tj
-4050.63 TJm
(100)
[5.559861
0
5.559861
0
5.559861
0] Tj
-3757.14 TJm
(120)
[5.559861
0
5.559861
0
5.559861
0] Tj
Q
242.5 167.5 m
242.5 2740 l
S
3497.5 167.5 m
3497.5 2740 l
S
242.5 167.5 m
275.051 167.5 l
S
242.5 489.063 m
275.051 489.063 l
S
242.5 810.625 m
275.051 810.625 l
S
242.5 1132.19 m
275.051 1132.19 l
S
242.5 1453.75 m
275.051 1453.75 l
S
242.5 1775.31 m
275.051 1775.31 l
S
242.5 2096.88 m
275.051 2096.88 l
S
242.5 2418.44 m
275.051 2418.44 l
S
242.5 2740 m
275.051 2740 l
S
3497.5 167.5 m
3464.95 167.5 l
S
3497.5 489.063 m
3464.95 489.063 l
S
3497.5 810.625 m
3464.95 810.625 l
S
3497.5 1132.19 m
3464.95 1132.19 l
S
3497.5 1453.75 m
3464.95 1453.75 l
S
3497.5 1775.31 m
3464.95 1775.31 l
S
3497.5 2096.88 m
3464.95 2096.88 l
S
3497.5 2418.44 m
3464.95 2418.44 l
S
3497.5 2740 m
3464.95 2740 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 6 12.625] Tm
0 0 Td
/F8_0 9.99975 Tf
(0.3)
[5.559861
0
2.779931
0
5.559861
0] Tj
-5.25 32.1563 Td
(0.35)
[5.559861
0
2.779931
0
5.559861
0
5.559861
0] Tj
0 64.3126 Td
(0.4)
[5.559861
0
2.779931
0
5.559861
0] Tj
-5.25 96.4689 Td
(0.45)
[5.559861
0
2.779931
0
5.559861
0
5.559861
0] Tj
0 128.6252 Td
(0.5)
[5.559861
0
2.779931
0
5.559861
0] Tj
-5.25 160.7815 Td
(0.55)
[5.559861
0
2.779931
0
5.559861
0
5.559861
0] Tj
0 192.9378 Td
(0.6)
[5.559861
0
2.779931
0
5.559861
0] Tj
-5.25 225.0941 Td
(0.65)
[5.559861
0
2.779931
0
5.559861
0
5.559861
0] Tj
0 257.2504 Td
(0.7)
[5.559861
0
2.779931
0
5.559861
0] Tj
Q
20.0025 w
0 J
/DeviceRGB {} CS
[0 0.447 0.7402] SC
568 453.691 m
893.5 450.477 l
1219 437.613 l
1544.5 437.613 l
1870 408.672 l
2195.5 424.75 l
2521 421.531 l
2846.5 418.316 l
3172 424.75 l
3497.5 379.734 l
S
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
568 2656.39 m
893.5 2582.43 l
1219 2592.08 l
1544.5 2617.8 l
1870 2595.3 l
2195.5 2505.26 l
2521 2537.42 l
2846.5 2592.08 l
3172 2466.67 l
3497.5 2669.26 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font UCGYDF+Helvetica
%%EOF
